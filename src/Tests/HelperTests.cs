using System.IO;
using NUnit.Framework;
using WorldBuilder.Helpers;

namespace Tests
{
	[TestFixture]
	public class HelperTests
	{
		[Test]
		[TestCase(0u, new byte[] { 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 })]
		[TestCase(1u, new byte[] { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00 })]
		[TestCase(2u, new byte[] { 0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00 })]
		[TestCase(3u, new byte[] { 0x01, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00 })]
		[TestCase(31u, new byte[] { 0x01, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0x7f })]
		[TestCase(32u, new byte[] { 0x02, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00 })]
		[TestCase(33u, new byte[] { 0x02, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00 })]
		[TestCase(63u, new byte[] { 0x02, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f })]
		public void GetComp2Ex(uint n, byte[] expected)
		{
			using (var stream = new MemoryStream())
			using (var writer = new BinaryWriter(stream))
			{
				writer.WriteComp2Ex(n);
				writer.Flush();
				Assert.That(stream.ToArray(), Is.EqualTo(expected));
			}
		}
	}
}